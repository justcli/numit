#!/usr/bin/env python3
import sys
import math
import statistics

def find(n):
    try:
        r = data[nums.index(n)]
    except Exception:
        return '-'
    return r


nums = []
decimals = 10
try:
    decimals = sys.argv[1:2][0]
    if decimals.startswith('-d') and decimals[2].isdigit():
        if len(decimals) != 3:
            print("Decimal places must be less from 0 to 9", file=sys.stderr)
            exit(1)
        decimals = int(decimals[2])
        sys.argv.pop(1)
except IndexError:
    pass

has_float = False

data = sys.argv[1:]
if not data:
    data = []
    d = sys.stdin.readline()
    while d.strip():
        d = d.split(' ')
        d = list(filter(lambda x:x, d))
        data.extend(d)
        if '.' in d:
            has_float = True
        d = sys.stdin.readline()


for n in data:
    try:
        f = float(n)
    except Exception:
        continue
    nums.append(f)
    if '.' in n:
        has_float = True

if not nums:
    # read from stdin
    line = sys.stdin.readline()
    while line:
        try:
            f = float(line)
        except Exception as e:
            print(e)
            continue
        nums.append(f)
        line = sys.stdin.readline()


sum = 0.0
avg = 0.0
min = 0.0
max = 0.0
sd = 0.0

for f in nums:
    sum += f
    if min == 0:
        min = f
    elif f < min:
        min = f

    if f > max:
        max = f
min = find(min)
max = find(max)

try:
    avg = sum / len(nums)
    if avg == int(avg):
        avg = int(avg)
    else:
        avg = round(avg, decimals)
except ZeroDivisionError:
    avg = '-'

if len(nums) and avg != '-':
    stdev = statistics.stdev(nums)
else:
    stdev = '-'

if not has_float:
    sum = int(sum)
print(f"sum  : {sum}")
print(f"avg  : {avg}")
print(f"stdev: {stdev}")
print(f"min  : {min}")
print(f"max  : {max}")
